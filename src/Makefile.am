#
#  The Hilbert Kernel Library, a library for verifying formal proofs.
#  Copyright Â© 2011 Alexander Klauer
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#  To contact the author
#     by email: Graf.Zahl@gmx.net
#     on wiki : http://www.wikiproofs.org/w/index.php?title=User_talk:GrafZahl
#

CL_MSG = "/* AUTOGENERATED FILE! DO NOT EDIT! */"

cl/pmap.h: cl/bimap.template.h
	(echo $(CL_MSG) && $(SED) "s/BIMAP/ParamMap/g;s/DOM_TYPE/HilbertHandle/g;s/COD_TYPE/HilbertHandle/g;s/ENTRY_TYPE/ParamMapEntry/g;s/BMITER/ParamMapIterator/g;s/PREFIX/hilbert_pmap/g;s/DOM_HASH/cl_hash32/g;s/COD_HASH/cl_hash32/g" $<) > $@

cl/smap.h: cl/map.template.h
	(echo $(CL_MSG) && $(SED) "s/MAP/SubstitutionMap/g;s/KEY_TYPE/HilbertHandle/g;s/VALUE_TYPE/struct HilbertExpression */g;s/ENTRY_TYPE/SubstitutionMapEntry/g;s/MITER/SubstitutionMapIterator/g;s/PREFIX/hilbert_smap/g;s/HASH/cl_hash32/g" $<) > $@

cl/eset.h: cl/set.template.h
	(echo $(CL_MSG) && $(SED) "s/SET/EQCSet/g;s/VALUE_TYPE/IndexSet */g;s/SITER/EQCSetIterator/g;s/PREFIX/hilbert_eset/g;s/HASH/cl_hash_pointer/g" $<) > $@

cl/iset.h: cl/set.template.h
	(echo $(CL_MSG) && $(SED) "s/SET/IndexSet/g;s/VALUE_TYPE/HilbertHandle/g;s/SITER/IndexSetIterator/g;s/PREFIX/hilbert_iset/g;s/HASH/cl_hash32/g" $<) > $@

cl/mset.h: cl/set.template.h
	(echo $(CL_MSG) && $(SED) "s/SET/ModuleSet/g;s/VALUE_TYPE/struct HilbertModule */g;s/SITER/ModuleSetIterator/g;s/PREFIX/hilbert_mset/g;s/HASH/cl_hash_pointer/g" $<) > $@

cl/evector.h: cl/vector.template.h
	(echo $(CL_MSG) && $(SED) "s/VECTOR/ExpressionVector/g;s/VALUE_TYPE/struct HilbertExpression */g;s/VITER/ExpressionVectorIterator/g;s/PREFIX/hilbert_evector/g" $<) > $@

cl/ivector.h: cl/vector.template.h
	(echo $(CL_MSG) && $(SED) "s/VECTOR/IndexVector/g;s/VALUE_TYPE/HilbertHandle/g;s/VITER/IndexVectorIterator/g;s/PREFIX/hilbert_ivector/g" $<) > $@

cl/ovector.h: cl/vector.template.h
	(echo $(CL_MSG) && $(SED) "s/VECTOR/ObjectVector/g;s/VALUE_TYPE/union Object */g;s/VITER/ObjectVectorIterator/g;s/PREFIX/hilbert_ovector/g" $<) > $@

AM_CFLAGS = -Wall -Wextra -pedantic -D_GNU_SOURCE=1 -DHILBERT_THREADSAFE=1
AM_LDFLAGS = -lpthread -export-symbols-regex "^(hilbert_|HILBERT_|Hilbert).*"
include_HEADERS = hilbert.h
lib_LTLIBRARIES = libhilbert.la
libhilbert_la_SOURCES = cl/*.h threads/*.h private.h param.h export.c expr.c functor.c import.c kind.c misc.c module.c object.c var.c
